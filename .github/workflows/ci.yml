name: CI
on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: ~/.npm #${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-nodecachekey-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-nodecachekey-
      - run: npm ci
      - run: npm run format:check
      - run: npm run test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
      - name: Zip Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Staging
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        run: npx surge --project ./build --domain dashing-scale.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx surge --project ./build --domain production-reactapp.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Send a Slack Message
        #  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker://technosophos/slack-notify
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }} # The WEBHOOK is already config to channel z_general
          #SLACK_MESSAGE: 'Deployed to Production'
          #SLACK_MESSAGE: 'New Release ${{ github.event.release.tag_name }} is published, < ${{ github.event.release.html_url }}|check it out now.>'
          #SLACK_MESSAGE: New Release ${{ github.event.release.tag_name }} is published, < ${{ github.event.release.html_url }}|check it out now.>
          SLACK_MESSAGE: ${{ github.event.release.tag_name }} is published
          #SLACK_CHANNEL: "z_general"

      #    - name: Open an Issue
      #      # if
      #      run: |
      #        curl --request POST \
      #        --url https://api.github.com/repos/${{
      #        github.repository }}/issues \
      #        --header 'authorization: Bearer ${{
      #        secrets.GITHUB_TOKEN }}' \
      #        --header 'content-type: application/json' \
      #        --data '{
      #        "title": "Automated issue for commit",
      #        }'
      #           "body": "This issue was automatically created by
      #         "title": "Automated issue for commit: ${{ github.sha }}",
      #        the GitHub Action workflow **${{ github.workflow
      #        }}**. \n\n The commit hash was: _${{ github.sha }}_.",
      #        "assignees": ["${{
      #        github.event.pull_request.user.login }}"]

      - name: Get today's date
        id: date
        run: |
          echo "::set-output name=today::$(date "+%Y/%m/%d")"

      - name: Create an issue
        uses: actions-ecosystem/action-create-issue@v1
        with:
          github_token: ${{ secrets.github_token }}
          title: ${{ steps.date.outputs.today }}
          body: |
            ## This week's TODO

            - [ ] Have a meeting with UX team
            - [ ] Check the dashboard

          labels: |
            meeting
            weekly
